# This workflow will install Python dependencies and run some static tests.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy

on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  python-version: "3.8"
  pyinstaller-version: "4.3"

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
          - os: macos-10.15
          - os: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install APT dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install PyInstaller==${{ env.pyinstaller-version }} -r requirements.txt
      - name: Run PyInstaller
        env:
          PYTHONOPTIMIZE: 1 # Enable optimizations as if the -O flag is given.
          PYTHONHASHSEED: 42 # Try to ensure deterministic results.
        run: |
          pyinstaller build.spec
      - name: List distribution files
        run: |
          find dist
      - name: Tar files
        if: runner.os != 'Windows'
        run: |
          tar --format=ustar -czvf ${{matrix.os}}.tar.gz dist/*/
      - name: Archive files
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive dist/*/ ${{matrix.os}}.zip
      # Upload archives as artifacts, these can be downloaded from the GitHub actions page.
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{matrix.os}}.*
          retention-days: 7
      # If a tag is pushed then a new archives are uploaded to GitHub Releases automatically.
      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{matrix.os}}.*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
